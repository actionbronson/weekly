openapi: 3.0.0
info:
  title: Weekly
  version: 1.0.0
servers:
- description: Local development server
  url: https://localhost:8443/api/rest/v1
- description: Production server
  url: https://weekplanner.app/api/rest/v1
paths:
  /week:
    get:
      operationId: getCurrentWeek
      parameters:
      - description: the timezone
        explode: true
        in: query
        name: tz
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Week'
          description: The current week
      security:
      - oAuthFacebook:
        - email
        - publish_profile
      summary: Get current week based on a timezone
      tags:
      - calendar
      x-accepts: application/json
  /week/{weekYear}/{weekNo}:
    get:
      operationId: getWeekOf
      parameters:
      - description: ISO 8601 relative week (number).
        explode: false
        in: path
        name: weekNo
        required: true
        schema:
          type: integer
        style: simple
      - description: ISO 8601 relative week (year).
        explode: false
        in: path
        name: weekYear
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Week'
          description: The week
      summary: Get current week based on a timezone
      tags:
      - calendar
      x-accepts: application/json
  /week/next:
    get:
      operationId: getNextWeek
      parameters:
      - description: ISO 8601 relative week (number).
        explode: true
        in: query
        name: weekNo
        required: true
        schema:
          type: integer
        style: form
      - description: ISO 8601 relative week (year).
        explode: true
        in: query
        name: weekYear
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Week'
          description: The next week
      security:
      - oAuthFacebook:
        - get-tasks
        - post-tasks
      summary: Get next week.
      tags:
      - calendar
      x-accepts: application/json
  /week/previous:
    get:
      operationId: getPreviousWeek
      parameters:
      - description: ISO 8601 relative week (number).
        explode: true
        in: query
        name: weekNo
        required: true
        schema:
          type: integer
        style: form
      - description: ISO 8601 relative week (year).
        explode: true
        in: query
        name: weekYear
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Week'
          description: The previous week
      security:
      - oAuthFacebook:
        - get-tasks
        - post-tasks
      summary: Get previous week.
      tags:
      - calendar
      x-accepts: application/json
  /task/{id}:
    get:
      operationId: getIndividualTask
      parameters:
      - description: the task id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: "."
      summary: Get task.
      tags:
      - tasks
      x-accepts: application/json
    put:
      operationId: updateTaskById
      parameters:
      - description: the task id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        description: The task to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: "."
      summary: Update a task.
      tags:
      - tasks
      x-contentType: application/json
      x-accepts: application/json
  /task/{id}/priority/increment:
    put:
      operationId: incrementTaskPriority.
      parameters:
      - description: the task id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: "."
      summary: Increment a task priority.
      tags:
      - tasks
      x-accepts: application/json
  /task/{id}/priority/decrement:
    put:
      operationId: decrementTaskPriority.
      parameters:
      - description: the task id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: "."
      summary: Decrement a task priority.
      tags:
      - tasks
      x-accepts: application/json
  /task/{id}/state:
    put:
      operationId: updateTaskState.
      parameters:
      - description: the task id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: the task state
        explode: true
        in: query
        name: state
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: "."
      summary: Update a task state.
      tags:
      - tasks
      x-accepts: application/json
  /task/{id}/label:
    put:
      operationId: updateTaskLabel.
      parameters:
      - description: the task id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: the task label
        explode: true
        in: query
        name: label
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: "."
      summary: Update a task label.
      tags:
      - tasks
      x-accepts: application/json
  /task/labels:
    get:
      operationId: getTaskLabels.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskLabel'
          description: "."
      summary: Get all task labels.
      tags:
      - task-labels
      x-accepts: application/json
  /task/priorities:
    get:
      operationId: getTaskPriorities.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskPriority'
          description: "."
      summary: Get all task priorities.
      tags:
      - task-priorities
      x-accepts: application/json
  /task/states:
    get:
      operationId: getTaskStates.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskState'
          description: "."
      summary: Get all task states.
      tags:
      - task-states
      x-accepts: application/json
  /tasks:
    delete:
      operationId: deleteTasks
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The task(s) you wish to update
      responses:
        "200":
          description: Task are deleted.
      summary: Delete a task.
      tags:
      - tasks
      x-contentType: application/json
      x-accepts: application/json
    get:
      operationId: getTasks
      parameters:
      - description: ISO 8601 relative week (number).  Defaults to current weekNo.
        explode: true
        in: query
        name: weekNo
        required: false
        schema:
          type: integer
        style: form
      - description: ISO 8601 relative week (year).  Defaults to current weekYear.
        explode: true
        in: query
        name: weekYear
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: "."
      summary: Get tasks for a week.
      tags:
      - tasks
      x-accepts: application/json
    post:
      operationId: createTasks
      parameters:
      - description: ISO 8601 relative week (number).  Defaults to current weekNo.
        explode: true
        in: query
        name: weekNo
        required: true
        schema:
          type: integer
        style: form
      - description: ISO 8601 relative week (year).  Defaults to current weekYear.
        explode: true
        in: query
        name: weekYear
        required: true
        schema:
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Task'
              type: array
        description: The task(s) you wish to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: Created task(s).
      summary: Create tasks.
      tags:
      - tasks
      x-contentType: application/json
      x-accepts: application/json
    put:
      operationId: updateTasks
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Task'
              type: array
        description: The tasks you wish to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
                type: array
          description: Updated tasks.
      summary: Update a tasks.
      tags:
      - tasks
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    BasicObject:
      properties:
        updateTs:
          format: date-time
          nullable: false
          type: string
        creationTs:
          format: date-time
          nullable: false
          type: string
        typeOf:
          type: string
      type: object
    UserId:
      properties:
        provider:
          nullable: false
          type: string
        email:
          nullable: false
          type: string
      required:
      - email
      - provider
      type: object
    User:
      allOf:
      - $ref: '#/components/schemas/BasicObject'
      - $ref: '#/components/schemas/User_allOf'
      discriminator:
        propertyName: typeOf
    Preferences:
      properties:
        timeZone:
          type: string
        dragToNextWeek:
          type: boolean
      type: object
    TaskId:
      properties:
        userId:
          $ref: '#/components/schemas/UserId'
        taskId:
          nullable: false
          type: string
      required:
      - taskId
      - userId
      type: object
    TaskLabel:
      example:
        color: color
        name: name
      properties:
        name:
          maxLength: 32
          minLength: 3
          nullable: false
          type: string
        color:
          nullable: false
          type: string
      type: object
    TaskPriority:
      example:
        level: 0
        name: name
      properties:
        name:
          maxLength: 32
          minLength: 3
          nullable: false
          type: string
        level:
          nullable: false
          type: integer
      type: object
    TaskState:
      example:
        value: TODO
      properties:
        value:
          enum:
          - TODO
          - IN_PROGRESS
          - DONE
          nullable: false
          type: string
      type: object
    Task:
      allOf:
      - $ref: '#/components/schemas/BasicObject'
      - $ref: '#/components/schemas/Task_allOf'
      discriminator:
        propertyName: typeOf
    Day:
      example:
        dayOfYear: 1
        year: 5
      properties:
        dayOfYear:
          type: integer
        year:
          type: integer
      type: object
    Week:
      example:
        year: 0
        start:
          dayOfYear: 1
          year: 5
        weekNo: 6
        end:
          dayOfYear: 1
          year: 5
      properties:
        year:
          nullable: false
          type: integer
        weekNo:
          nullable: false
          type: integer
        start:
          $ref: '#/components/schemas/Day'
        end:
          $ref: '#/components/schemas/Day'
      type: object
    User_allOf:
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        picture:
          type: string
        alias:
          type: string
        labels:
          default: []
          items:
            $ref: '#/components/schemas/TaskLabel'
          type: array
        priorities:
          default: []
          items:
            $ref: '#/components/schemas/TaskPriority'
          type: array
        states:
          default: []
          items:
            $ref: '#/components/schemas/TaskState'
          type: array
        preferences:
          $ref: '#/components/schemas/Preferences'
    Task_allOf:
      properties:
        id:
          $ref: '#/components/schemas/TaskId'
        label:
          $ref: '#/components/schemas/TaskLabel'
        priority:
          $ref: '#/components/schemas/TaskPriority'
        summary:
          maxLength: 128
          minLength: 3
          nullable: false
          type: string
        contents:
          maxLength: 65536
          nullable: true
          type: string
        state:
          $ref: '#/components/schemas/TaskState'
        weekYear:
          nullable: false
          type: integer
        weekNo:
          nullable: false
          type: integer

