package org.weekly.api;

import java.util.List;
import org.weekly.model.Task;

import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.Map;
import javax.ws.rs.*;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.MediaType;
import org.apache.cxf.jaxrs.ext.multipart.*;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiResponse;
import io.swagger.jaxrs.PATCH;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Weekly
 *
 * <p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 */
@Path("/")
@Api(value = "/", description = "")
public interface TasksApi  {

    /**
     * Create tasks.
     *
     */
    @POST
    @Path("/tasks")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Create tasks.", tags={ "tasks",  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Created task(s).", response = Task.class, responseContainer = "List") })
    public List<Task> createTasks(@QueryParam("weekNo") @NotNull  Integer weekNo, @QueryParam("weekYear") @NotNull  Integer weekYear, @Valid List<Task> task);

    /**
     * Delete a task.
     *
     */
    @DELETE
    @Path("/tasks")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Delete a task.", tags={ "tasks",  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Deleted task(s).", response = String.class, responseContainer = "List") })
    public List<String> deleteTask(@Valid List<String> ERROR_UNKNOWN);

    /**
     * Get tasks for a week.
     *
     */
    @GET
    @Path("/tasks")
    @Produces({ "application/json" })
    @ApiOperation(value = "Get tasks for a week.", tags={ "tasks",  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = ".", response = Task.class, responseContainer = "List") })
    public List<Task> getTasks(@QueryParam("weekNo") @NotNull  Integer weekNo, @QueryParam("weekYear") @NotNull  Integer weekYear);

    /**
     * Update a task.
     *
     */
    @PUT
    @Path("/tasks")
    @Consumes({ "application/json" })
    @Produces({ "application/json" })
    @ApiOperation(value = "Update a task.", tags={ "tasks" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Updated task(s).", response = Task.class, responseContainer = "List") })
    public List<Task> updateTask(@Valid List<Task> task);
}

