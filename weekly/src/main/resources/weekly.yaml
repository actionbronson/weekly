openapi: "3.0.0"
info:
  version: 1.0.0
  title: Weekly
  license:
    name: MIT

servers:
  - url: https://localhost:8443/api/rest/v1
    description: Local development server

  - url: https://weekplanner.app/api/rest/v1
    description: Production server

schemes:
  - https

paths:
  /week:
    get:
      summary: Get current week based on a timezone
      operationId: getCurrentWeek
      tags:
        - calendar
      parameters:
        - name: tz
          in: query
          description: the timezone
          required: true
          schema:
            type: string
      security:
        - oAuthFacebook:
            - email
            - publish_profile
      responses:
        '200':
          description: The current week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /week/{weekYear}/{weekNo}:
    get:
      summary: Get current week based on a timezone
      operationId: getWeekOf
      tags:
        - calendar
      parameters:
        - name: weekNo
          in: path
          description: ISO 8601 relative week (number).
          required: true
          schema:
            type: integer
            minValue: 1
            maxValue: 53
        - name: weekYear
          in: path
          description: ISO 8601 relative week (year).
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /week/next:
    get:
      summary: Get next week.
      operationId: getNextWeek
      tags:
        - calendar
      parameters:
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).
          required: true
          schema:
            type: integer
            minValue: 1
            maxValue: 53
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).
          required: true
          schema:
            type: integer
      security:
        - oAuthFacebook:
            - get-tasks
            - post-tasks
      responses:
        '200':
          description: The next week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /week/previous:
    get:
      summary: Get previous week.
      operationId: getPreviousWeek
      tags:
        - calendar
      parameters:
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).
          required: true
          schema:
            type: integer
            minValue: 1
            maxValue: 53
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).
          required: true
          schema:
            type: integer
      security:
        - oAuthFacebook:
            - get-tasks
            - post-tasks
      responses:
        '200':
          description: The previous week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /tasks:
    get:
      summary: Get tasks for a week.
      operationId: getTasks
      tags:
        - tasks
      parameters:
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).  Defaults to current weekNo.
          required: true
          schema:
            type: integer
            minValue: 1
            maxValue: 53
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).  Defaults to current weekYear.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

    post:
      summary: Create tasks.
      operationId: createTasks
      tags:
        - tasks
      parameters:
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).  Defaults to current weekNo.
          required: true
          schema:
            type: integer
            minValue: 1
            maxValue: 53
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).  Defaults to current weekYear.
          required: true
          schema:
            type: integer
      requestBody:
        description: The task(s) you wish to create
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Task"

      responses:
        '200':
          description: Created task(s).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
    put:
      summary: Update a task.
      operationId: updateTask
      tags:
        - tasks
      requestBody:
        description: The task(s) you wish to update
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Task"

      responses:
        '200':
          description: Updated task(s).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

    delete:
      summary: Delete a task.
      operationId: deleteTask
      tags:
        - tasks
      requestBody:
        description: The task(s) you wish to update
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string

      responses:
        '200':
          description: Deleted task(s).
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

components:
  securitySchemes:
    oAuthFacebook:
      type: oauth2
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        implicit:
          authorizationUrl: https://www.facebook.com/v6.0/dialog/oauth?client_id=238019867610264&redirect_uri=localhost:8080&state=whatevers
          scopes:
            email: email
            public_profile: public_profile

  schemas:

    BasicObject:
      type: object
      properties:
        updateTs:
          type: string
          format: date-time
          nullable: false
        creationTs:
          type: string
          format: date-time
          nullable: false

    UserId:
      type: object
      required:
        - provider
        - email
      properties:
        provider:
          type: string
          nullable: false
        email:
          type: string
          nullable: false

    User:
      allOf:
        - $ref: "#/components/schemas/BasicObject"
        - type: object
          required:
            - id
          properties:
            id:
              x-id: "@org.springframework.data.annotation.Id"
              allOf:
                - $ref: "#/components/schemas/UserId"
            name:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            picture:
              type: string
            alias:
              type: string
            preferences:
              $ref: "#/components/schemas/Preferences"
            tasks:
              type: array
              default: []
              items:
                $ref: "#/components/schemas/Task"

    Preferences:
      type: object
      properties:
        timeZone:
          type: string
        dragToNextWeek:
          type: boolean

    TaskLabel:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 3
          maxLength: 32
        color:
          type: string
          nullable: false

    TaskPriority:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 3
          maxLength: 32
        level:
          type: integer
          nullable: false

    TaskState:
      type: object
      properties:
        value:
          type: string
          nullable: false
          enum: [TODO,IN_PROGRESS,PROCRASTINATE,DONE]

    Task:
      allOf:
        - $ref: "#/components/schemas/BasicObject"
        - type: object
          properties:
            id:
              type: string
              nullable: false
            label:
              $ref: "#/components/schemas/TaskLabel"
            priority:
              $ref: "#/components/schemas/TaskPriority"
            summary:
              nullable: false
              type: string
              minLength: 3
              maxLength: 128
            contents:
              nullable: true
              type: string
              maxLength: 65536
            state:
              nullable: false
              $ref: "#/components/schemas/TaskState"
            weekYear:
              nullable: false
              type: integer
            weekNo:
              nullable: false
              type: integer

    Day:
      type: object
      properties:
        dayOfYear:
          type: integer
        year:
          type: integer

    Week:
      type: object
      properties:
        year:
          type: integer
          nullable: false
        weekNo:
          type: integer
          nullable: false
        start:
          nullable: false
          $ref: "#/components/schemas/Day"
        end:
          nullable: false
          $ref: "#/components/schemas/Day"
        tasks:
          type: array
          default: []
          items:
            $ref: "#/components/schemas/Task"
