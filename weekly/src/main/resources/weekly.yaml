openapi: "3.0.0"
info:
  version: 1.0.0
  title: PlanIt
  license:
    name: MIT
#servers:
#  - url: http://petstore.swagger.io/v1
paths:
  /week/current:
    get:
      summary: Get current week based on a timezone
      operationId: getCurrentWeek
      tags:
        - calendar
#      parameters:
#        - name: limit
#          in: query
#          description: How many items to return at one time (max 100)
#          required: false
#          schema:
#            type: integer
#            format: int32
      responses:
        '200':
          description: The current week
#          headers:
#            x-next:
#              description: A link to the next page of responses
#              schema:
#                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
#    post:
#      summary: Create a pet
#      operationId: createPets
#      tags:
#        - pets
#      responses:
#        '201':
#          description: Null response
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
#  /pets/{petId}:
#    get:
#      summary: Info for a specific pet
#      operationId: showPetById
#      tags:
#        - pets
#      parameters:
#        - name: petId
#          in: path
#          required: true
#          description: The id of the pet to retrieve
#          schema:
#            type: string
#      responses:
#        '200':
#          description: Expected response to a valid request
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Pet"
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
components:
  schemas:

    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        alias:
          type: string
#        preferences:
#          type: object
#          properties:
#            $ref: "#/components/schemas/Preferences"

    Preferences:
      type: object
      properties:
        weekStart:
          type: string
          enum: [SUN,MON,TUE,WED,THU,FRI,SAT]
        timeZone:
          type: string
        dragToNextWeek:
          type: boolean

    Week:
      type: object
      properties:
        start:
          type: number
        startLabel:
          type: string
        end:
          type: number
        endLabel:
          type: string