openapi: "3.0.0"
info:
  version: 1.0.0
  title: Weekly
  license:
    name: MIT
servers:
  - url: http://localhost:8080/api/rest/v1
    description: Development server
schemes:
  - http
paths:
  /week:
    get:
      summary: Get current week based on a timezone
      operationId: getCurrentWeek
      tags:
        - calendar
      parameters:
        - name: tz
          in: query
          description: the timezone
          required: true
          schema:
            type: string
#        - name: weekStart
#          in: query
#          description: Day of the week to start week on.
#          required: true
#          schema:
#            type: string
#            enum: [SUN,MON,TUE,WED,THU,FRI,SAT]
      responses:
        '200':
          description: The current week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /week/next:
    get:
      summary: Get next week.
      operationId: getNextWeek
      tags:
        - calendar
      parameters:
#        - name: year
#          in: query
#          description: The year of the week number.
#          required: true
#          schema:
#            type: integer
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).
          required: true
          schema:
            type: integer
            minValue: 1
            maxValue: 1
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The next week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /week/previous:
    get:
      summary: Get previous week.
      operationId: getPreviousWeek
      tags:
        - calendar
      parameters:
#        - name: year
#          in: query
#          description: The year of the week number.
#          required: true
#          schema:
#            type: integer
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).
          required: true
          schema:
            type: integer
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The previous week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

#    post:
#      summary: Create a pet
#      operationId: createPets
#      tags:
#        - pets
#      responses:
#        '201':
#          description: Null response
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
#  /pets/{petId}:
#    get:
#      summary: Info for a specific pet
#      operationId: showPetById
#      tags:
#        - pets
#      parameters:
#        - name: petId
#          in: path
#          required: true
#          description: The id of the pet to retrieve
#          schema:
#            type: string
#      responses:
#        '200':
#          description: Expected response to a valid request
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Pet"
#        default:
#          description: unexpected error
#          content:
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Error"
components:
  schemas:

    User:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        alias:
          type: string
        preferences:
          type: object
          properties:
            $ref: "#/components/schemas/Preferences"

    Preferences:
      type: object
      properties:
        weekStart:
          type: string
          enum: [SUN,MON,TUE,WED,THU,FRI,SAT]
        timeZone:
          type: string
        dragToNextWeek:
          type: boolean

    TaskLabel:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 3
          maxLength: 32
        color:
          type: string
          nullable: false

    TaskPriority:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 3
          maxLength: 32
        level:
          type: integer
          nullable: false

    TaskState:
      type: object
      properties:
        value:
          type: string
          nullable: false
          enum: [TODO,IN_PROGRESS,PROCRASTINATE,DONE]

    Task:
      type: object
      properties:
        label:
          $ref: "#/components/schemas/TaskLabel"
        priority:
          $ref: "#/components/schemas/TaskPriority"
        summary:
          nullable: false
          type: string
          minLength: 3
          maxLength: 128
        contents:
          nullable: true
          type: string
          maxLength: 65536
        state:
          nullable: false
          $ref: "#/components/schemas/TaskState"

    Day:
      type: object
      properties:
        dayOfYear:
          type: integer
        year:
          type: integer

    Week:
      type: object
      properties:
        year:
          type: integer
          nullable: false
        weekNo:
          type: integer
          nullable: false
#          minValue: 1
#          maxValue: 53
        start:
          nullable: false
          $ref: "#/components/schemas/Day"
        end:
          nullable: false
          $ref: "#/components/schemas/Day"
        tasks:
          type: array
          default: []
          items:
            $ref: "#/components/schemas/Task"
