openapi: "3.0.0"
info:
  version: 1.0.0
  title: Weekly

servers:
  - url: https://localhost:8443/api/rest/v1
    description: Local development server
  - url: https://weekplanner.app/api/rest/v1
    description: Production server

paths:
  /week:
    get:
      summary: Get current week based on a timezone
      operationId: getCurrentWeek
      tags:
        - calendar
      parameters:
        - name: tz
          in: query
          description: the timezone
          required: true
          schema:
            type: string
      security:
        - oAuthFacebook:
            - email
            - publish_profile
      responses:
        '200':
          description: The current week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /week/{weekYear}/{weekNo}:
    get:
      summary: Get current week based on a timezone
      operationId: getWeekOf
      tags:
        - calendar
      parameters:
        - name: weekNo
          in: path
          description: ISO 8601 relative week (number).
          required: true
          schema:
            type: integer
#            minValue: 1
#            maxValue: 53
        - name: weekYear
          in: path
          description: ISO 8601 relative week (year).
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /week/next:
    get:
      summary: Get next week.
      operationId: getNextWeek
      tags:
        - calendar
      parameters:
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).
          required: true
          schema:
            type: integer
#            minValue: 1
#            maxValue: 53
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).
          required: true
          schema:
            type: integer
      security:
        - oAuthFacebook:
            - get-tasks
            - post-tasks
      responses:
        '200':
          description: The next week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /week/previous:
    get:
      summary: Get previous week.
      operationId: getPreviousWeek
      tags:
        - calendar
      parameters:
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).
          required: true
          schema:
            type: integer
#            minValue: 1
#            maxValue: 53
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).
          required: true
          schema:
            type: integer
      security:
        - oAuthFacebook:
            - get-tasks
            - post-tasks
      responses:
        '200':
          description: The previous week
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Week"

  /task/{id}:
    get:
      summary: Get task.
      operationId: getIndividualTask
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          description: the task id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

    put:
      summary: Update a task.
      operationId: updateTaskById
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          description: the task id
          required: true
          schema:
            type: string
      requestBody:
        description: The task to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
#              # not sure why this is necessary.
#              allOf:
#                - $ref: "#/components/schemas/Task"
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

  /task/{id}/priority/increment:
    put:
      summary: Increment a task priority.
      operationId: incrementTaskPriority.
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          description: the task id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

  /task/{id}/priority/decrement:
    put:
      summary: Decrement a task priority.
      operationId: decrementTaskPriority.
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          description: the task id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

  /task/{id}/state:
    put:
      summary: Update a task state.
      operationId: updateTaskState.
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          description: the task id
          required: true
          schema:
            type: string
        - name: state
          in: query
          description: the task state
          required: true
          schema:
            type: string
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

  /task/{id}/label:
    put:
      summary: Update a task label.
      operationId: updateTaskLabel.
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          description: the task id
          required: true
          schema:
            type: string
        - name: label
          in: query
          description: the task label
          required: true
          schema:
            type: string
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"

  /task/labels:
    get:
      summary: Get all task labels.
      operationId: getTaskLabels.
      tags:
        - task-labels
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskLabel"

  /task/priorities:
    get:
      summary: Get all task priorities.
      operationId: getTaskPriorities.
      tags:
        - task-priorities
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskPriority"

  /task/states:
    get:
      summary: Get all task states.
      operationId: getTaskStates.
      tags:
        - task-states
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskState"

  /tasks:
    get:
      summary: Get tasks for a week.
      operationId: getTasks
      tags:
        - tasks
      parameters:
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).  Defaults to current weekNo.
          required: false
          schema:
            type: integer
#            minValue: 1
#            maxValue: 53
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).  Defaults to current weekYear.
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: .
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

    post:
      summary: Create tasks.
      operationId: createTasks
      tags:
        - tasks
      parameters:
        - name: weekNo
          in: query
          description: ISO 8601 relative week (number).  Defaults to current weekNo.
          required: true
          schema:
            type: integer
#            minValue: 1
#            maxValue: 53
        - name: weekYear
          in: query
          description: ISO 8601 relative week (year).  Defaults to current weekYear.
          required: true
          schema:
            type: integer
      requestBody:
        description: The task(s) you wish to create
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Task"

      responses:
        '200':
          description: Created task(s).
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
    put:
      summary: Update a tasks.
      operationId: updateTasks
      tags:
        - tasks
      requestBody:
        description: The tasks you wish to update
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Task"

      responses:
        '200':
          description: Updated tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

    delete:
      summary: Delete a task.
      operationId: deleteTasks
      tags:
        - tasks
      requestBody:
        description: The task(s) you wish to update
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Task are deleted.

components:
#  securitySchemes:
#    oAuthFacebook:
#      type: oauth2
#      description: This API uses OAuth 2 with the implicit grant flow.
#      flows:
#        implicit:
#          authorizationUrl: https://www.facebook.com/v6.0/dialog/oauth?client_id=238019867610264&redirect_uri=localhost:8080&state=whatevers
#          scopes:
#            email: email
#            public_profile: public_profile
#
  schemas:

#    BasicObject:
#      type: object
#      properties:
#        updateTs:
#          type: string
#          format: date-time
#          nullable: false
#        creationTs:
#          type: string
#          format: date-time
#          nullable: false
#        typeOf:
#          type: string

    UserId:
      type: object
      required:
        - provider
        - email
      properties:
        provider:
          type: string
          nullable: false
        email:
          type: string
          nullable: false

    User:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UserId"
          nullable: false
        updateTs:
          type: string
          format: date-time
          nullable: false
        creationTs:
          type: string
          format: date-time
          nullable: false
        name:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        picture:
          type: string
        alias:
          type: string
        labels:
          type: array
          default: []
          items:
            $ref: "#/components/schemas/TaskLabel"
        priorities:
          type: array
          default: []
          items:
            $ref: "#/components/schemas/TaskPriority"
        states:
          type: array
          default: []
          items:
            $ref: "#/components/schemas/TaskState"
        preferences:
          $ref: "#/components/schemas/Preferences"

    Preferences:
      type: object
      properties:
        timeZone:
          type: string
        dragToNextWeek:
          type: boolean

    TaskId:
      type: object
      required:
        - userId
        - taskId
      properties:
        userId:
          $ref: "#/components/schemas/UserId"
          nullable: false
        taskId:
          type: string
          nullable: false

    TaskLabel:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 3
          maxLength: 32
        color:
          type: string
          nullable: false

    TaskPriority:
      type: object
      properties:
        name:
          type: string
          nullable: false
          minLength: 3
          maxLength: 32
        level:
          type: integer
          nullable: false

    TaskState:
      type: object
      properties:
        value:
          type: string
          nullable: false
          enum: [TODO,IN_PROGRESS,DONE]

    Task:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/TaskId"
          nullable: false
        updateTs:
          type: string
          format: date-time
          nullable: false
        creationTs:
          type: string
          format: date-time
          nullable: false
        label:
          $ref: "#/components/schemas/TaskLabel"
        priority:
          $ref: "#/components/schemas/TaskPriority"
        summary:
          nullable: false
          type: string
          minLength: 3
          maxLength: 128
        contents:
          nullable: true
          type: string
          maxLength: 65536
        state:
          nullable: false
          $ref: "#/components/schemas/TaskState"
        weekYear:
          nullable: false
          type: integer
        weekNo:
          nullable: false
          type: integer

    Day:
      type: object
      properties:
        dayOfYear:
          type: integer
        year:
          type: integer

    Week:
      type: object
      properties:
        year:
          type: integer
          nullable: false
        weekNo:
          type: integer
          nullable: false
        start:
          nullable: false
          $ref: "#/components/schemas/Day"
        end:
          nullable: false
          $ref: "#/components/schemas/Day"
